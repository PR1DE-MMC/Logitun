@model Logitun.Shared.Models.PagedResult<Logitun.Shared.DTOs.MissionDto>
@{
    ViewData["Title"] = "Missions";
    var trucks = ViewData["Trucks"] as Dictionary<int, string>;
    var drivers = ViewData["Drivers"] as Dictionary<Guid, string>;
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3">Missions</h1>
        <a href="@Url.Action("Create", "Missions")" class="btn btn-primary">
            <i class="bi bi-plus-lg"></i> New Mission
        </a>
    </div>

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Status</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Truck</th>
                            <th>Driver</th>
                            <th>Distance (km)</th>
                            <th>Payload (kg)</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var mission in Model.Items)
                        {
                            <tr>
                                <td>@mission.MissionId</td>
                                <td>
                                    <span class="badge bg-@(mission.Status switch {
                                        "SCHEDULED" => "primary",
                                        "IN_PROGRESS" => "warning",
                                        "COMPLETED" => "success",
                                        "CANCELLED" => "danger",
                                        _ => "secondary"
                                    })">
                                        @mission.Status
                                    </span>
                                </td>
                                <td>@mission.StartDatetime.ToString("g")</td>
                                <td>@(mission.EndDatetime?.ToString("g") ?? "-")</td>
                                <td>@(mission.TruckId.HasValue && trucks?.ContainsKey(mission.TruckId.Value) == true ? trucks[mission.TruckId.Value] : "-")</td>
                                <td>@(mission.DriverId.HasValue && drivers?.ContainsKey(mission.DriverId.Value) == true ? drivers[mission.DriverId.Value] : "-")</td>
                                <td>@(mission.DistanceKm?.ToString("N2") ?? "-")</td>
                                <td>@(mission.PayloadWeight?.ToString("N2") ?? "-")</td>
                                <td>
                                    <div class="btn-group">
                                        <a asp-action="Edit" asp-route-id="@mission.MissionId" class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-danger" 
                                                onclick="confirmDelete(@mission.MissionId)">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (Model.TotalItems > 0)
            {
                <div class="d-flex justify-content-between align-items-center mt-4">
                    <div>
                        Showing @(((Model.Page - 1) * Model.PageSize) + 1) to @(Math.Min(Model.Page * Model.PageSize, Model.TotalItems)) of @Model.TotalItems entries
                    </div>
                    <nav>
                        <ul class="pagination mb-0">
                            @for (int i = 1; i <= Math.Ceiling((double)Model.TotalItems / Model.PageSize); i++)
                            {
                                <li class="page-item @(i == Model.Page ? "active" : "")">
                                    <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-pageSize="@Model.PageSize">@i</a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            }
            else
            {
                <div class="text-center mt-4">
                    <p class="text-muted">No missions found.</p>
                </div>
            }
        </div>
    </div>
</div>

<form id="deleteForm" asp-action="Delete" method="post">
    <input type="hidden" id="missionId" name="id" />
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script>
        function confirmDelete(id) {
            if (confirm('Are you sure you want to delete this mission?')) {
                document.getElementById('missionId').value = id;
                document.getElementById('deleteForm').submit();
            }
        }
    </script>
} 