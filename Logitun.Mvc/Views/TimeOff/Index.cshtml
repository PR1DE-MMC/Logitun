@model Logitun.Shared.Models.PagedResult<Logitun.Shared.DTOs.TimeOffRequestDto>

@{
    ViewData["Title"] = "Time Off Requests";
    var driversList = ViewData["Drivers"] as SelectList;
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Time Off Requests</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Dashboard</a></li>
        <li class="breadcrumb-item active">Time Off Requests</li>
    </ol>

    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div>
                <i class="fas fa-calendar-alt me-1"></i>
                Time Off Requests List
            </div>
            <a href="@Url.Action("Create", "TimeOff")" class="btn btn-primary btn-sm">
                <i class="fas fa-plus"></i> New Time Off Request
            </a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Driver</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var request in Model.Items)
                        {
                            <tr>
                                <td>@request.RequestId</td>
                                <td>@driversList?.FirstOrDefault(d => d.Value == request.DriverId.ToString())?.Text</td>
                                <td>@request.StartDate.ToShortDateString()</td>
                                <td>@request.EndDate.ToShortDateString()</td>
                                <td>
                                    <span class="badge bg-@(request.Status switch {
                                        "PENDING" => "warning",
                                        "APPROVED" => "success",
                                        "REJECTED" => "danger",
                                        _ => "secondary"
                                    })">
                                        @request.Status
                                    </span>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a href="@Url.Action("Edit", "TimeOff", new { id = request.RequestId })"
                                            class="btn btn-primary btn-sm">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <form action="@Url.Action("Delete", "TimeOff", new { id = request.RequestId })"
                                            method="post" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-danger btn-sm"
                                                onclick="return confirm('Are you sure you want to delete this time off request?');">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
                            <a class="page-link" asp-action="Index" asp-route-page="@(Model.Page - 1)"
                                asp-route-pageSize="@Model.PageSize">Previous</a>
                        </li>
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.Page ? "active" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@i"
                                    asp-route-pageSize="@Model.PageSize">@i</a>
                            </li>
                        }
                        <li class="page-item @(Model.Page == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link" asp-action="Index" asp-route-page="@(Model.Page + 1)"
                                asp-route-pageSize="@Model.PageSize">Next</a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>